{"ast":null,"code":"var _jsxFileName = \"D:\\\\LaiOffer\\\\TravelPlannerFE\\\\src\\\\SharedComponents\\\\RouteDrawer.js\";\nimport { useState, useEffect, google } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MapDirectionsRenderer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      directions: null,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      places,\n      travelMode\n    } = this.props;\n    const waypoints = places.map(p => ({\n      location: {\n        lat: p.latitude,\n        lng: p.longitude\n      },\n      stopover: true\n    }));\n    const origin = waypoints.shift().location;\n    const destination = waypoints.pop().location;\n    const directionsService = new google.maps.DirectionsService();\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      travelMode: travelMode,\n      waypoints: waypoints\n    }, (result, status) => {\n      if (status === google.maps.DirectionsStatus.OK) {\n        this.setState({\n          directions: result\n        });\n      } else {\n        this.setState({\n          error: result\n        });\n      }\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n      directions: this.state.directions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default DirectionsRenderer;","map":{"version":3,"sources":["D:/LaiOffer/TravelPlannerFE/src/SharedComponents/RouteDrawer.js"],"names":["useState","useEffect","google","MapDirectionsRenderer","React","Component","state","directions","error","componentDidMount","places","travelMode","props","waypoints","map","p","location","lat","latitude","lng","longitude","stopover","origin","shift","destination","pop","directionsService","maps","DirectionsService","route","result","status","DirectionsStatus","OK","setState","render","DirectionsRenderer"],"mappings":";AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA0C,OAA1C;;;AAEA,MAAMC,qBAAN,SAAoCC,KAAK,CAACC,SAA1C,CAAoD;AAAA;AAAA;AAAA,SAClDC,KADkD,GAC1C;AACNC,MAAAA,UAAU,EAAE,IADN;AAENC,MAAAA,KAAK,EAAE;AAFD,KAD0C;AAAA;;AAMlDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAyB,KAAKC,KAApC;AAEA,UAAMC,SAAS,GAAGH,MAAM,CAACI,GAAP,CAAWC,CAAC,KAAI;AAC9BC,MAAAA,QAAQ,EAAE;AAACC,QAAAA,GAAG,EAAEF,CAAC,CAACG,QAAR;AAAkBC,QAAAA,GAAG,EAACJ,CAAC,CAACK;AAAxB,OADoB;AAE9BC,MAAAA,QAAQ,EAAE;AAFoB,KAAJ,CAAZ,CAAlB;AAIA,UAAMC,MAAM,GAAGT,SAAS,CAACU,KAAV,GAAkBP,QAAjC;AACA,UAAMQ,WAAW,GAAGX,SAAS,CAACY,GAAV,GAAgBT,QAApC;AAIA,UAAMU,iBAAiB,GAAG,IAAIxB,MAAM,CAACyB,IAAP,CAAYC,iBAAhB,EAA1B;AACAF,IAAAA,iBAAiB,CAACG,KAAlB,CACE;AACEP,MAAAA,MAAM,EAAEA,MADV;AAEEE,MAAAA,WAAW,EAAEA,WAFf;AAGEb,MAAAA,UAAU,EAAEA,UAHd;AAIEE,MAAAA,SAAS,EAAEA;AAJb,KADF,EAOE,CAACiB,MAAD,EAASC,MAAT,KAAoB;AAClB,UAAIA,MAAM,KAAK7B,MAAM,CAACyB,IAAP,CAAYK,gBAAZ,CAA6BC,EAA5C,EAAgD;AAC9C,aAAKC,QAAL,CAAc;AACZ3B,UAAAA,UAAU,EAAEuB;AADA,SAAd;AAGD,OAJD,MAIO;AACL,aAAKI,QAAL,CAAc;AAAE1B,UAAAA,KAAK,EAAEsB;AAAT,SAAd;AACD;AACF,KAfH;AAiBD;;AAEDK,EAAAA,MAAM,GAAG;AACP,QAAI,KAAK7B,KAAL,CAAWE,KAAf,EAAsB;AACpB,0BAAO;AAAA,kBAAK,KAAKF,KAAL,CAAWE;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,wBAAO,QAAC,kBAAD;AAAoB,MAAA,UAAU,EAAE,KAAKF,KAAL,CAAWC;AAA3C;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AA3CiD;;AA8CpD,eAAe6B,kBAAf","sourcesContent":["import {useState, useEffect, google} from 'react'\r\n\r\nclass MapDirectionsRenderer extends React.Component {\r\n  state = {\r\n    directions: null,\r\n    error: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { places, travelMode } = this.props;\r\n\r\n    const waypoints = places.map(p =>({\r\n        location: {lat: p.latitude, lng:p.longitude},\r\n        stopover: true\r\n    }))\r\n    const origin = waypoints.shift().location;\r\n    const destination = waypoints.pop().location;\r\n\r\n\r\n\r\n    const directionsService = new google.maps.DirectionsService();\r\n    directionsService.route(\r\n      {\r\n        origin: origin,\r\n        destination: destination,\r\n        travelMode: travelMode,\r\n        waypoints: waypoints\r\n      },\r\n      (result, status) => {\r\n        if (status === google.maps.DirectionsStatus.OK) {\r\n          this.setState({\r\n            directions: result\r\n          });\r\n        } else {\r\n          this.setState({ error: result });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <h1>{this.state.error}</h1>;\r\n    }\r\n    return <DirectionsRenderer directions={this.state.directions} />;\r\n  }\r\n}\r\n\r\nexport default DirectionsRenderer"]},"metadata":{},"sourceType":"module"}