{"ast":null,"code":"export const login = credential => {\n  const loginUrl = `/users/login?username=${credential.username}&password=${credential.password}`;\n  return fetch(loginUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\"\n  }).then(response => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to log in\");\n    }\n  });\n};\nexport const register = data => {\n  const registerUrl = `/users/register`;\n  return fetch(registerUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    // credentials: \"include\",\n    body: JSON.stringify(data)\n  }).then(response => {\n    if (response.status !== 201) {\n      throw Error(\"Fail to register\");\n    }\n  });\n};\nexport const getUserInfo = username => {\n  return fetch(`/users/${username}`).then(response => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to get All Routes\");\n    }\n\n    return response.json();\n  });\n};\nexport const logout = () => {\n  const loginUrl = `/users/logout`;\n  return fetch(loginUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    if (response.status !== 200) {\n      throw Error(\"Fail to log out\");\n    }\n  });\n};","map":{"version":3,"sources":["D:/LaiOffer/TravelPlannerFE/src/Utils/userUtils.js"],"names":["login","credential","loginUrl","username","password","fetch","method","headers","credentials","then","response","status","Error","register","data","registerUrl","body","JSON","stringify","getUserInfo","json","logout"],"mappings":"AAAA,OAAO,MAAMA,KAAK,GAAIC,UAAD,IAAgB;AACjC,QAAMC,QAAQ,GAAI,yBAAwBD,UAAU,CAACE,QAAS,aAAYF,UAAU,CAACG,QAAS,EAA9F;AAEA,SAAOC,KAAK,CAACH,QAAD,EAAW;AACrBI,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFY;AAMrBC,IAAAA,WAAW,EAAE;AANQ,GAAX,CAAL,CAOJC,IAPI,CAOEC,QAAD,IAAc;AACpB,QAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAMC,KAAK,CAAC,gBAAD,CAAX;AACD;AACF,GAXM,CAAP;AAYD,CAfI;AAiBL,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU;AAChC,QAAMC,WAAW,GAAI,iBAArB;AAEA,SAAOV,KAAK,CAACU,WAAD,EAAc;AACxBT,IAAAA,MAAM,EAAE,MADgB;AAExBC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFe;AAKzB;AACCS,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf;AANkB,GAAd,CAAL,CAOJL,IAPI,CAOEC,QAAD,IAAc;AACpB,QAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAMC,KAAK,CAAC,kBAAD,CAAX;AACD;AACF,GAXM,CAAP;AAYD,CAfM;AAiBP,OAAO,MAAMO,WAAW,GAAIhB,QAAD,IAAc;AACvC,SAAOE,KAAK,CAAE,UAASF,QAAS,EAApB,CAAL,CAA4BM,IAA5B,CAAkCC,QAAD,IAAc;AACpD,QAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAMC,KAAK,CAAC,wBAAD,CAAX;AACD;;AACD,WAAOF,QAAQ,CAACU,IAAT,EAAP;AACD,GALM,CAAP;AAMD,CAPM;AASP,OAAO,MAAMC,MAAM,GAAG,MAAM;AAC1B,QAAMnB,QAAQ,GAAI,eAAlB;AAEA,SAAOG,KAAK,CAACH,QAAD,EAAW;AACrBI,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAFY,GAAX,CAAL,CAMJE,IANI,CAMEC,QAAD,IAAc;AACpB,QAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAMC,KAAK,CAAC,iBAAD,CAAX;AACD;AACF,GAVM,CAAP;AAWD,CAdM","sourcesContent":["export const login = (credential) => {\r\n    const loginUrl = `/users/login?username=${credential.username}&password=${credential.password}`;\r\n   \r\n    return fetch(loginUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n\r\n      },\r\n      credentials: \"include\",\r\n    }).then((response) => {\r\n      if (response.status !== 200) {\r\n        throw Error(\"Fail to log in\");\r\n      }\r\n    });\r\n  };\r\n\r\n  export const register = (data) => {\r\n    const registerUrl = `/users/register`;\r\n   \r\n    return fetch(registerUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n     // credentials: \"include\",\r\n      body: JSON.stringify(data),\r\n    }).then((response) => {\r\n      if (response.status !== 201) {\r\n        throw Error(\"Fail to register\");\r\n      }\r\n    });\r\n  };\r\n\r\n  export const getUserInfo = (username) => {\r\n    return fetch(`/users/${username}`).then((response) => {\r\n      if (response.status !== 200) {\r\n        throw Error(\"Fail to get All Routes\");\r\n      }   \r\n      return response.json();\r\n    });\r\n  }; \r\n\r\n  export const logout = () => {\r\n    const loginUrl = `/users/logout`;\r\n   \r\n    return fetch(loginUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n\r\n      },\r\n    }).then((response) => {\r\n      if (response.status !== 200) {\r\n        throw Error(\"Fail to log out\");\r\n      }\r\n    });\r\n  };"]},"metadata":{},"sourceType":"module"}